1. Опишіть своїми словами як код розробника потрапляє в браузер користувача сайту. Які процеси відбуваються після git push в компанії, що впровадила devops?Це питання є обов'язковим *

Пользователь, вводя URL в адресную строку браузера обращается к серверу, задеплоенному по этому адресу. Сервер возвращает HTML код, который отрисовывается браузером.
Сервер сервит (serve) HTML код, который попадает туда посредством деплоймента на определенную хостинг платформу (например AWS / GCP / Azure).
В зависиомсти от сложности сайта это может быть статический сайт либо Application. В зависимости от технологии процесс деплоймента разнится, но можно выделить общие основные этапы, после того как
разработчик делает git push. До human CodeReview код проходит этапы тестирования, code quality (lint, Sonar, etc), возможен деплоймент из Feature Branch в stage environment и
запуск E2E / Integration Tests, если таковые имеются.
После этого код мерджится в главный branch и деплоится в Stage / QA environment для дальнейшего тестирования QA'щиками. В случае успешного тестирования главной Git ветки -
  код мерджится с release веткой и процесс тестирования повторяется. В случае успеха производится деплоймент в Production. После этого Пользователь видит код в браузере :)

2. Ви заходите на інтернет сервер, і в процесі діагностики умовної проблеми виконуєте команду netstat помічаєте тисячі коннекшенів у статусі TIME_WAIT.
Про що може свідчити такий стан мережевого стеку?
Як подальші кроки діагностики виконаєте та як будете вирішувати цю ситуацію?

Такое состояние сети говорит о том, что происходит большое количество коротких клиентских соединений, которые быстро закрываются и сервер не успевает перевести открытые порты в карантин.
Тем не менее, в основном в обычной жизни, это не проблема, т.к. около 65000 портов сложно занять одновременно, если это не DDOS атака. Т.е. для начала нужно мониторить систему какой-то промежуток
времени - если портов много и они не растут, то можно игнорить эту проблему. Если все же проблема есть и количество TIME_WAIT возрастает:
1) Если есть доступ к клиентской части:
 а) попробовать поставить keep-alive флаг для новых TCP соединений
 б) закрывать TCP соединени со стороны клиента
2) Сделать сокеты переиспользуемыми ( net.ipv4.tcp_tw_recycle )
3) Уменьшить время для TIME_WAIT с 2*MSL до 1*MSL ( 2 минуты )
4) (не самый лучший способ) Установить SO_LINGER таймаут в 0